---
name: Run linter and tests for all Rust crates

on:
  workflow_call:
  workflow_dispatch:

jobs:
  # Run formatter and linter for all crates, and unit tests for all simple crates, that,
  # in particular, do not require anvil node to be running.
  # For shielder-circuit crate, we run tests and build the binary for measuring circuits.
  lint-and-format-rust:
    name: Run lints and format
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download generated contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: generated-contracts
          path: contracts

      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts

      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache

      - name: Prepare Rust env
        uses: ./.github/actions/prepare-rust-env

      - name: Run linter
        run: |
          make lint-rust
          make format-rust

  test-rust-crates:
    name: Run tests for ${{ matrix.crate }}
    needs: lint-and-format-rust
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        crate:
          - crates/halo2-verifier
          - crates/shielder-circuits
          - crates/shielder-cli
          - crates/shielder_bindings
          - crates/powers-of-tau
          - crates/shielder-account
          - crates/shielder-contract
          - crates/shielder-setup
          - crates/integration-tests
          - tee
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download generated contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: generated-contracts
          path: contracts

      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts

      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache

      - name: Prepare Rust env
        uses: ./.github/actions/prepare-rust-env

      # NOTE: integration tests use vanilla solc compiler for compiling Solidity
      - name: Install solc compiler
        if: matrix.crate == 'crates/integration-tests'
        uses: ./.github/actions/install-solc
        with:
          solc-version: 0.8.26

      - name: Install dependencies
        if: matrix.crate == 'crates/integration-tests'
        run: make deps

      - name: Run tests
        run: cd ${{ matrix.crate }} && make test

  # Run heavy tests for shielder-relayer and e2e tooling tests.
  full-testing:
    name: Run heavy tests
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download generated contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: generated-contracts
          path: contracts

      - name: Download compiled contracts from artifacts
        uses: actions/download-artifact@v4
        with:
          name: contract-artifacts
          path: artifacts

      - name: Download generated build cache
        uses: actions/download-artifact@v4
        with:
          name: generated-build-cache
          path: cache

      - name: Prepare Rust env
        uses: ./.github/actions/prepare-rust-env

      - name: Prepare Solidity environment
        uses: ./.github/actions/prepare-sol-env

      - name: Run tests for shielder-relayer
        run: cd crates/shielder-relayer && BUILD=client make test

      - name: Run e2e tooling tests
        run: |
          NO_FORMATTING=true ./tooling-e2e-tests/full_scenario.sh
          NO_FORMATTING=true ./tooling-e2e-tests/recovery_scenario.sh
          NO_FORMATTING=true ./tooling-e2e-tests/many_actors.sh

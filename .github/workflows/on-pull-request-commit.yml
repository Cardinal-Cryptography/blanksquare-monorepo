---
name: PR commit

on:
  merge_group:
  pull_request:
  workflow_dispatch:

concurrency:
  group: "${{ github.ref }}-${{ github.workflow }}"
  cancel-in-progress: true

jobs:
  check-vars-and-secrets:
    name: Check vars and secrets
    uses: ./.github/workflows/_check-vars-and-secrets.yml
    secrets: inherit

  build-contracts:
    name: Generate and compile contracts
    needs: [check-vars-and-secrets]
    uses: ./.github/workflows/_build-contracts.yml
    secrets: inherit

  deploy-contracts:
    name: Deploy contracts
    needs: [build-contracts]
    uses: ./.github/workflows/_deploy-contracts.yml
    secrets: inherit

  rust-crates-checks:
    name: Rust crates checks
    needs: [build-contracts]
    uses: ./.github/workflows/_rust-crates-checks.yml
    secrets: inherit

  build-wasm-package:
    name: Build wasm package
    needs: [check-vars-and-secrets]
    uses: ./.github/workflows/_build-wasm-packages.yml
    secrets: inherit
    with:
      target: wasm
      artifact-name: wasm-pkg
      artifact-path: crates/shielder_bindings/pkg
      upload-proving-keys: true

  build-wasm-package-without-circuits:
    name: Build wasm package without circuits
    needs: [check-vars-and-secrets]
    uses: ./.github/workflows/_build-wasm-packages.yml
    secrets: inherit
    with:
      target: wasm-without-circuits
      artifact-name: wasm-pkg-without-circuits
      artifact-path: crates/shielder_bindings/pkg-without-circuits
      upload-proving-keys: false

  ts-checks:
    name: Typescript modules checks
    needs: [build-contracts, build-wasm-package, build-wasm-package-without-circuits]
    uses: ./.github/workflows/_ts-checks.yml
    secrets: inherit

  clean-wasm-artifact:
    name: Clean wasm artifact
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    # dependencies should include all jobs, which interact with wasm artifact
    needs: [build-wasm-package, build-wasm-package-without-circuits, ts-checks]
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            wasm-pkg
            wasm-pkg-without-circuits
            proving-keys-pkg

  measure-gas-usage-and-verifier-code-size:
    name: Measure gas usage
    if: github.event_name == 'pull_request'
    uses: ./.github/workflows/_measure-gas-and-contract-size.yml
    secrets: inherit

  all-jobs-completed:
    name: All jobs completed
    runs-on: ubuntu-22.04
    if: ${{ always() }}
    needs:
      - check-vars-and-secrets
      - build-contracts
      - deploy-contracts
      - rust-crates-checks
      - build-wasm-package
      - build-wasm-package-without-circuits
      - ts-checks
      - clean-wasm-artifact
      - measure-gas-usage-and-verifier-code-size
    steps:
      - name: Check job status
        run: |
          if [[ "${{ needs.build-contracts.result }}" != "success" ]]; then
            echo "Required job failed: build-contracts (${{ needs.build-contracts.result }})"
            exit 1
          fi
          if [[ "${{ needs.deploy-contracts.result }}" != "success" ]]; then
            echo "Required job failed: deploy-contracts (${{ needs.deploy-contracts.result }})"
            exit 1
          fi
          if [[ "${{ needs.rust-crates-checks.result }}" != "success" ]]; then
            echo "Required job failed: rust-crates-checks (${{ needs.rust-crates-checks.result }})"
            exit 1
          fi
          if [[ "${{ needs.build-wasm-package.result }}" != "success" ]]; then
            echo "Required job failed: build-wasm-package (${{ needs.build-wasm-package.result }})"
            exit 1
          fi
          if [[ "${{ needs.build-wasm-package-without-circuits.result }}" != "success" ]]; then
            echo "Required job failed: build-wasm-package-without-circuits" \
                 "(${{ needs.build-wasm-package-without-circuits.result }})"
            exit 1
          fi
          if [[ "${{ needs.ts-checks.result }}" != "success" ]]; then
            echo "Required job failed: ts-checks (${{ needs.ts-checks.result }})"
            exit 1
          fi
          echo "All required jobs completed successfully"
